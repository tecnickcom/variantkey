name: check

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'

env:
  NODE_VERSION: 14
  PYTHON_VERSION: 3.x

permissions:
  contents: read

jobs:
  c:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v3
      - name: install dependencies
        run: sudo apt install -y lcov astyle
      - name: set RELEASE number
        run: echo ${GITHUB_RUN_NUMBER} > RELEASE
      - name: test
        run: cd c && make version test build
      - name: coverage report
        uses: coverallsapp/github-action@v2
        with:
          format: lcov
          file: c/target/test/coverage/variantkey.info

  go:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v3
      - name: setup go build environment
        uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
          check-latest: true
      - name: set RELEASE number
        run: echo ${GITHUB_RUN_NUMBER} > RELEASE
      - name: test
        run: cd go && make mod deps linter test GOPATH=$(go env GOPATH)

  javascript:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v3
      - name: setup node build environment
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: install dependencies
        run: npm install --global uglify-js js-beautify
      - name: set RELEASE number
        run: echo ${GITHUB_RUN_NUMBER} > RELEASE
      - name: test
        run: cd javascript && make test build

  python:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v3
      - name: setup python build environment
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade virtualenv
      - name: set RELEASE number
        run: echo ${GITHUB_RUN_NUMBER} > RELEASE
      - name: test
        run: cd python && make vbuild

  python-class:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v3
      - name: setup python build environment
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade virtualenv
      - name: set RELEASE number
        run: echo ${GITHUB_RUN_NUMBER} > RELEASE
      - name: test
        run: cd python-class && make vbuild

  r:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          sudo apt install r-base libfontconfig1-dev libcurl4-openssl-dev libharfbuzz-dev libfribidi-dev libfreetype6-dev libpng-dev libtiff5-dev libjpeg-dev
          sudo Rscript -e "install.packages(c('Rcpp', 'base', 'devtools', 'inline', 'pryr', 'renv', 'ragg', 'roxygen2', 'testthat', 'pkgdown', 'libgfortran-ng'), repos = 'http://cran.us.r-project.org')"
      - name: set RELEASE number
        run: echo ${GITHUB_RUN_NUMBER} > RELEASE
      - name: test
        run: cd r && make build test
